name: 🔒 Pre-commit Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit-security:
    name: Pre-commit Security Verification
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # 機密情報漏洩チェック
    - name: 🔍 Secret Detection
      run: |
        echo "🔍 Checking for secrets in code..."
        
        # APIキー・パスワード検索
        if grep -r -E "(api_key|password|secret|token|private_key)" --include="*.js" --include="*.ts" --include="*.json" .; then
          echo "❌ 潜在的な機密情報が検出されました"
          exit 1
        fi
        
        # .env ファイルの誤コミットチェック
        if find . -name "*.env*" -not -path "./node_modules/*" | grep -v ".gitignore"; then
          echo "❌ .envファイルがコミットされています"
          exit 1
        fi
        
        echo "✅ 機密情報チェック完了"

    # 個人情報検出チェック
    - name: 🏥 Medical Privacy Check
      run: |
        echo "🏥 医療関連個人情報チェック..."
        
        # 日本の個人情報パターン検索
        if grep -r -E "(患者|氏名|生年月日|住所|電話番号|診断)" --include="*.js" --include="*.ts" --include="*.md" . || true; then
          echo "⚠️ 医療関連用語が検出されました - コンテキストを確認してください"
        fi
        
        echo "✅ 医療プライバシーチェック完了"

    # 脆弱なコードパターンチェック  
    - name: 🚨 Vulnerable Code Pattern Check
      run: |
        echo "🚨 脆弱なコードパターンチェック..."
        
        # SQLインジェクション脆弱性
        if grep -r "query.*\+.*req\." --include="*.js" --include="*.ts" .; then
          echo "❌ SQLインジェクション脆弱性の可能性"
          exit 1
        fi
        
        # XSS脆弱性
        if grep -r "innerHTML.*req\." --include="*.js" --include="*.ts" .; then
          echo "❌ XSS脆弱性の可能性"
          exit 1
        fi
        
        # eval使用チェック
        if grep -r "eval(" --include="*.js" --include="*.ts" .; then
          echo "❌ eval()の使用は危険です"
          exit 1
        fi
        
        echo "✅ 脆弱コードパターンチェック完了"

    # 依存関係セキュリティチェック
    - name: 📦 Dependency Security Audit
      run: |
        echo "📦 依存関係セキュリティ監査..."
        npm audit --audit-level moderate
        echo "✅ 依存関係チェック完了"

    # Linting & Formatting
    - name: 🎨 Code Quality Check
      run: |
        echo "🎨 コード品質チェック..."
        
        # ESLintでセキュリティルールチェック（存在する場合）
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
          npm run lint || echo "⚠️ Lintルールを確認してください"
        fi
        
        echo "✅ コード品質チェック完了"

    # セキュリティ設定確認
    - name: ⚙️ Security Configuration Check
      run: |
        echo "⚙️ セキュリティ設定確認..."
        
        # .gitignoreにセキュリティ関連除外項目があるか確認
        if ! grep -q "*.env" .gitignore; then
          echo "❌ .gitignoreに*.envが含まれていません"
          exit 1
        fi
        
        # SECURITY.mdの存在確認
        if [ ! -f "SECURITY.md" ]; then
          echo "❌ SECURITY.mdファイルがありません"
          exit 1
        fi
        
        echo "✅ セキュリティ設定確認完了"

    - name: 📊 Security Check Summary
      if: always()
      run: |
        echo "## 🛡️ Pre-commit Security Check Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **機密情報検出**: 完了" >> $GITHUB_STEP_SUMMARY  
        echo "✅ **医療プライバシー**: 確認済み" >> $GITHUB_STEP_SUMMARY
        echo "✅ **脆弱コードパターン**: 検査完了" >> $GITHUB_STEP_SUMMARY
        echo "✅ **依存関係監査**: 実行済み" >> $GITHUB_STEP_SUMMARY
        echo "✅ **セキュリティ設定**: 確認済み" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **ステータス**: セキュリティチェック完了" >> $GITHUB_STEP_SUMMARY